|sorter
clock => datapath:datos.clock
clock => controlador:control.clock
resetn => controlador:control.resetn
go => controlador:control.go
wrinit => datapath:datos.wrinit
datain[0] => datapath:datos.datain[0]
datain[1] => datapath:datos.datain[1]
datain[2] => datapath:datos.datain[2]
datain[3] => datapath:datos.datain[3]
radd[0] => datapath:datos.radd[0]
radd[1] => datapath:datos.radd[1]
radd[2] => datapath:datos.radd[2]
dataout[0] << datapath:datos.dataout[0]
dataout[1] << datapath:datos.dataout[1]
dataout[2] << datapath:datos.dataout[2]
dataout[3] << datapath:datos.dataout[3]
done << controlador:control.done


|sorter|datapath:datos
clock => dataout[0]~reg0.CLK
clock => dataout[1]~reg0.CLK
clock => dataout[2]~reg0.CLK
clock => dataout[3]~reg0.CLK
clock => R[7][0].CLK
clock => R[7][1].CLK
clock => R[7][2].CLK
clock => R[7][3].CLK
clock => R[6][0].CLK
clock => R[6][1].CLK
clock => R[6][2].CLK
clock => R[6][3].CLK
clock => R[5][0].CLK
clock => R[5][1].CLK
clock => R[5][2].CLK
clock => R[5][3].CLK
clock => R[4][0].CLK
clock => R[4][1].CLK
clock => R[4][2].CLK
clock => R[4][3].CLK
clock => R[3][0].CLK
clock => R[3][1].CLK
clock => R[3][2].CLK
clock => R[3][3].CLK
clock => R[2][0].CLK
clock => R[2][1].CLK
clock => R[2][2].CLK
clock => R[2][3].CLK
clock => R[1][0].CLK
clock => R[1][1].CLK
clock => R[1][2].CLK
clock => R[1][3].CLK
clock => R[0][0].CLK
clock => R[0][1].CLK
clock => R[0][2].CLK
clock => R[0][3].CLK
wrinit => process_0.IN1
control[0] => Equal0.IN2
control[0] => Equal1.IN1
control[0] => Equal2.IN2
control[1] => Equal0.IN1
control[1] => Equal1.IN0
control[1] => Equal2.IN1
control[2] => Equal0.IN0
control[2] => Equal1.IN2
control[2] => Equal2.IN0
i[0] => Mux4.IN2
i[0] => Mux5.IN2
i[0] => Mux6.IN2
i[0] => Mux7.IN2
i[0] => Decoder2.IN2
i[1] => Mux4.IN1
i[1] => Mux5.IN1
i[1] => Mux6.IN1
i[1] => Mux7.IN1
i[1] => Decoder2.IN1
i[2] => Mux4.IN0
i[2] => Mux5.IN0
i[2] => Mux6.IN0
i[2] => Mux7.IN0
i[2] => Decoder2.IN0
j[0] => Mux0.IN2
j[0] => Mux1.IN2
j[0] => Mux2.IN2
j[0] => Mux3.IN2
j[0] => Decoder1.IN2
j[1] => Mux0.IN1
j[1] => Mux1.IN1
j[1] => Mux2.IN1
j[1] => Mux3.IN1
j[1] => Decoder1.IN1
j[2] => Mux0.IN0
j[2] => Mux1.IN0
j[2] => Mux2.IN0
j[2] => Mux3.IN0
j[2] => Decoder1.IN0
datain[0] => R.DATAB
datain[0] => R.DATAB
datain[0] => R.DATAB
datain[0] => R.DATAB
datain[0] => R.DATAB
datain[0] => R.DATAB
datain[0] => R.DATAB
datain[0] => R.DATAB
datain[1] => R.DATAB
datain[1] => R.DATAB
datain[1] => R.DATAB
datain[1] => R.DATAB
datain[1] => R.DATAB
datain[1] => R.DATAB
datain[1] => R.DATAB
datain[1] => R.DATAB
datain[2] => R.DATAB
datain[2] => R.DATAB
datain[2] => R.DATAB
datain[2] => R.DATAB
datain[2] => R.DATAB
datain[2] => R.DATAB
datain[2] => R.DATAB
datain[2] => R.DATAB
datain[3] => R.DATAB
datain[3] => R.DATAB
datain[3] => R.DATAB
datain[3] => R.DATAB
datain[3] => R.DATAB
datain[3] => R.DATAB
datain[3] => R.DATAB
datain[3] => R.DATAB
radd[0] => Decoder0.IN2
radd[0] => Mux8.IN2
radd[0] => Mux9.IN2
radd[0] => Mux10.IN2
radd[0] => Mux11.IN2
radd[1] => Decoder0.IN1
radd[1] => Mux8.IN1
radd[1] => Mux9.IN1
radd[1] => Mux10.IN1
radd[1] => Mux11.IN1
radd[2] => Decoder0.IN0
radd[2] => Mux8.IN0
radd[2] => Mux9.IN0
radd[2] => Mux10.IN0
radd[2] => Mux11.IN0
dataout[0] <= dataout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataout[1] <= dataout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataout[2] <= dataout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataout[3] <= dataout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|sorter|controlador:control
clock => ci[0].CLK
clock => ci[1].CLK
clock => ci[2].CLK
clock => cj[0].CLK
clock => cj[1].CLK
clock => cj[2].CLK
clock => state~1.DATAIN
resetn => ci[0].ACLR
resetn => ci[1].ACLR
resetn => ci[2].ACLR
resetn => cj[0].ACLR
resetn => cj[1].ACLR
resetn => cj[2].ACLR
resetn => state~3.DATAIN
go => next_state.S0.DATAB
go => Selector7.IN3
go => Selector6.IN1
i[0] <= Selector2.DB_MAX_OUTPUT_PORT_TYPE
i[1] <= Selector1.DB_MAX_OUTPUT_PORT_TYPE
i[2] <= Selector0.DB_MAX_OUTPUT_PORT_TYPE
j[0] <= Selector5.DB_MAX_OUTPUT_PORT_TYPE
j[1] <= Selector4.DB_MAX_OUTPUT_PORT_TYPE
j[2] <= Selector3.DB_MAX_OUTPUT_PORT_TYPE
control[0] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
control[1] <= control.DB_MAX_OUTPUT_PORT_TYPE
control[2] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
done <= done.DB_MAX_OUTPUT_PORT_TYPE


